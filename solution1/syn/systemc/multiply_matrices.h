// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _multiply_matrices_HH_
#define _multiply_matrices_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "multiply_matricesbkb.h"

namespace ap_rtl {

struct multiply_matrices : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > n;
    sc_out< sc_lv<7> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<16> > a_q0;
    sc_out< sc_lv<7> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<16> > b_q0;
    sc_out< sc_lv<7> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_out< sc_logic > c_we0;
    sc_out< sc_lv<16> > c_d0;


    // Module declarations
    multiply_matrices(sc_module_name name);
    SC_HAS_PROCESS(multiply_matrices);

    ~multiply_matrices();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    multiply_matricesbkb<1,1,16,16,16,16>* multiply_matricesbkb_U1;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > and_ln13_fu_162_p2;
    sc_signal< sc_lv<1> > and_ln13_reg_281;
    sc_signal< sc_lv<7> > trunc_ln18_fu_168_p1;
    sc_signal< sc_lv<7> > trunc_ln18_reg_285;
    sc_signal< sc_lv<4> > i_fu_181_p2;
    sc_signal< sc_lv<4> > i_reg_294;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > mul_ln18_fu_191_p2;
    sc_signal< sc_lv<7> > mul_ln18_reg_299;
    sc_signal< sc_lv<1> > icmp_ln14_fu_176_p2;
    sc_signal< sc_lv<7> > zext_ln15_1_fu_200_p1;
    sc_signal< sc_lv<7> > zext_ln15_1_reg_305;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > j_fu_209_p2;
    sc_signal< sc_lv<4> > j_reg_314;
    sc_signal< sc_lv<4> > k_fu_228_p2;
    sc_signal< sc_lv<4> > k_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln17_fu_223_p2;
    sc_signal< sc_lv<7> > add_ln18_2_fu_244_p2;
    sc_signal< sc_lv<7> > add_ln18_2_reg_332;
    sc_signal< sc_lv<16> > a_load_reg_342;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<16> > b_load_reg_347;
    sc_signal< sc_lv<16> > grp_fu_268_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > i_0_reg_93;
    sc_signal< sc_lv<1> > icmp_ln15_fu_204_p2;
    sc_signal< sc_lv<4> > j_0_reg_104;
    sc_signal< sc_lv<4> > k_0_reg_115;
    sc_signal< sc_lv<16> > acc_0_reg_126;
    sc_signal< sc_lv<7> > phi_mul_reg_139;
    sc_signal< sc_lv<64> > zext_ln18_fu_239_p1;
    sc_signal< sc_lv<64> > zext_ln18_1_fu_254_p1;
    sc_signal< sc_lv<64> > zext_ln20_fu_263_p1;
    sc_signal< sc_lv<1> > icmp_ln13_fu_150_p2;
    sc_signal< sc_lv<1> > icmp_ln13_1_fu_156_p2;
    sc_signal< sc_lv<16> > zext_ln14_fu_172_p1;
    sc_signal< sc_lv<4> > mul_ln18_fu_191_p0;
    sc_signal< sc_lv<16> > zext_ln15_fu_196_p1;
    sc_signal< sc_lv<16> > zext_ln17_fu_215_p1;
    sc_signal< sc_lv<7> > zext_ln17_1_fu_219_p1;
    sc_signal< sc_lv<7> > add_ln18_fu_234_p2;
    sc_signal< sc_lv<7> > add_ln18_1_fu_249_p2;
    sc_signal< sc_lv<7> > add_ln20_fu_259_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<7> > mul_ln18_fu_191_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<16> ap_const_lv16_4;
    static const sc_lv<16> ap_const_lv16_B;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_add_ln18_1_fu_249_p2();
    void thread_add_ln18_2_fu_244_p2();
    void thread_add_ln18_fu_234_p2();
    void thread_add_ln20_fu_259_p2();
    void thread_and_ln13_fu_162_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_c_d0();
    void thread_c_we0();
    void thread_i_fu_181_p2();
    void thread_icmp_ln13_1_fu_156_p2();
    void thread_icmp_ln13_fu_150_p2();
    void thread_icmp_ln14_fu_176_p2();
    void thread_icmp_ln15_fu_204_p2();
    void thread_icmp_ln17_fu_223_p2();
    void thread_j_fu_209_p2();
    void thread_k_fu_228_p2();
    void thread_mul_ln18_fu_191_p0();
    void thread_mul_ln18_fu_191_p00();
    void thread_mul_ln18_fu_191_p2();
    void thread_trunc_ln18_fu_168_p1();
    void thread_zext_ln14_fu_172_p1();
    void thread_zext_ln15_1_fu_200_p1();
    void thread_zext_ln15_fu_196_p1();
    void thread_zext_ln17_1_fu_219_p1();
    void thread_zext_ln17_fu_215_p1();
    void thread_zext_ln18_1_fu_254_p1();
    void thread_zext_ln18_fu_239_p1();
    void thread_zext_ln20_fu_263_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
